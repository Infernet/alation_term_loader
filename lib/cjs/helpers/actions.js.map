{"version":3,"sources":["../../../src/helpers/actions.ts"],"names":["insertTerm","connector","customFieldsId","termData","parentTerm","parentTermName","UniqTermKeyTermError","term","Article","create","title","termName","body","description","custom_templates","map","t","id","addChild","otype","AlationTermError","TERM_COLUMN_NAMES","join","lineageTable","alternativeName","reference","length","stewards","response","updateTerm","update","deleteTerm","result","delete","uploadPhysic","physicData","searchResult","search","ParentTermNotFoundPhysicError","ParentTermDuplicatePhysicError","termId","children","find","child","TermNotFoundPhysicError","getById","segments","physicPath","split","tableCustomField","custom_fields","field","field_name","value_type","value","instance","Datasource","schema","Schema","name","toLowerCase","ds_id","table","Table","schema_id","lineageTableRow","attribute","Attribute","table_id","updateResult","key","error","PHYSIC_COLUMN_NAMES","updateCustomFieldsValue","field_id","lineageRef","oid","display_name","url"],"mappings":";;;;;;;;;;AAGA;;AAUA;;AACA;;AACA;;AAKA;;AACA;;;;AAEO,eAAeA,UAAf,CAA0BC,SAA1B,EAA8CC,cAA9C,EAAwFC,QAAxF,EAAwH;AAC7H,QAAMC,UAAU,GAAG,MAAM,0BAAcH,SAAd,EAAyBE,QAAQ,CAACE,cAAlC,CAAzB,CAD6H,CAE7H;;AACA,MAAI,0CAA8BD,UAA9B,EAA0CD,QAA1C,CAAJ,EAAyD;AACvD,UAAM,IAAIG,2BAAJ,EAAN;AACD,GAL4H,CAM7H;;;AACA,QAAMC,IAAI,GAAG,MAAMN,SAAS,CAACO,OAAV,CAAkBC,MAAlB,CAAuC;AACxDC,IAAAA,KAAK,EAAEP,QAAQ,CAACQ,QADwC;AAExDC,IAAAA,IAAI,EAAET,QAAQ,CAACU,WAFyC;AAGxDC,IAAAA,gBAAgB,EAAEV,UAAU,CAACU,gBAAX,CAA4BC,GAA5B,CAAiCC,CAAD,IAAOA,CAAC,CAACC,EAAzC;AAHsC,GAAvC,CAAnB,CAP6H,CAY7H;;AACA,MAAI,EAAE,MAAMhB,SAAS,CAACO,OAAV,CAAkBU,QAAlB,CAA2Bd,UAAU,CAACa,EAAtC,EAA0C;AAACA,IAAAA,EAAE,EAAEV,IAAI,CAACU,EAAV;AAAcE,IAAAA,KAAK,EAAE;AAArB,GAA1C,CAAR,CAAJ,EAAyF;AACvF,UAAM,IAAIC,uBAAJ,CAAqB,CAACC,6BAAkBhB,cAAnB,EAAmCgB,6BAAkBV,QAArD,EAA+DW,IAA/D,CAAoE,GAApE,CAArB,EACF,mDADE,CAAN;AAED,GAhB4H,CAkB7H;;;AACA,MAAI,EAAE,MAAM,iCAAqBrB,SAArB,EAAgCC,cAAc,CAACqB,YAA/C,EAA6DhB,IAA7D,CAAR,CAAJ,EAAiF;AAC/E,UAAM,IAAIa,uBAAJ,CAAqBC,6BAAkBV,QAAvC,EAAiD,mDAAjD,CAAN;AACD,GArB4H,CAuB7H;;;AACA,MAAI,EAAE,MAAM,oCAAwBV,SAAxB,EAAmCC,cAAc,CAACsB,eAAlD,EAAmEjB,IAAnE,EAAyEJ,QAAQ,CAACqB,eAAlF,CAAR,CAAJ,EAAiH;AAC/G,UAAM,IAAIJ,uBAAJ,CAAqBC,6BAAkBG,eAAvC,EAAwD,oDAAxD,CAAN;AACD,GA1B4H,CA4B7H;;;AACA,MAAIrB,QAAQ,CAACsB,SAAT,CAAmBC,MAAnB,IAA6B,EAAE,MAAM,8BAAkBzB,SAAlB,EAA6BC,cAAc,CAACuB,SAA5C,EAAuDlB,IAAvD,EAA6DJ,QAAQ,CAACsB,SAAtE,CAAR,CAAjC,EAA4H;AAC1H,UAAM,IAAIL,uBAAJ,CAAqBC,6BAAkBI,SAAvC,EAAkD,6CAAlD,CAAN;AACD,GA/B4H,CAgC7H;;;AACA,MAAItB,QAAQ,CAACwB,QAAT,CAAkBD,MAAtB,EAA8B;AAC5B,UAAME,QAAQ,GAAG,MAAM,gCAAoB3B,SAApB,EAA+BC,cAAc,CAACyB,QAA9C,EAAwDpB,IAAxD,EAA8DJ,QAAQ,CAACwB,QAAvE,CAAvB;;AACA,QAAIC,QAAJ,EAAc;AACZ,YAAM,IAAIR,uBAAJ,CAAqB,SAArB,EAAgCQ,QAAhC,CAAN;AACD;AACF;AACF;;AAEM,eAAeC,UAAf,CAA0B5B,SAA1B,EAA8CC,cAA9C,EAAwFC,QAAxF,EAAwH;AAC7H;AACA,MAAII,IAAI,GAAG,MAAM,0BAAcN,SAAd,EAAyBE,QAAQ,CAACE,cAAlC,EAAkDF,QAAQ,CAACQ,QAA3D,CAAjB,CAF6H,CAG7H;AAEA;;AACAJ,EAAAA,IAAI,GAAG,MAAMN,SAAS,CAACO,OAAV,CAAkBsB,MAAlB,CAAuC;AAACb,IAAAA,EAAE,EAAEV,IAAI,CAACU,EAAV;AAAcP,IAAAA,KAAK,EAAEH,IAAI,CAACG,KAA1B;AAAiCE,IAAAA,IAAI,EAAET,QAAQ,CAACU;AAAhD,GAAvC,CAAb,CAN6H,CAO7H;;AACA,MAAI,EAAE,MAAM,oCAAwBZ,SAAxB,EAAmCC,cAAc,CAACsB,eAAlD,EAAmEjB,IAAnE,EAAyEJ,QAAQ,CAACqB,eAAlF,CAAR,CAAJ,EAAiH;AAC/G,UAAM,IAAIJ,uBAAJ,CAAqBC,6BAAkBG,eAAvC,EAAwD,2CAAxD,CAAN;AACD,GAV4H,CAY7H;;;AACA,MAAIrB,QAAQ,CAACsB,SAAT,CAAmBC,MAAnB,IAA6B,EAAE,MAAM,8BAAkBzB,SAAlB,EAA6BC,cAAc,CAACuB,SAA5C,EAAuDlB,IAAvD,EAA6DJ,QAAQ,CAACsB,SAAtE,CAAR,CAAjC,EAA4H;AAC1H,UAAM,IAAIL,uBAAJ,CAAqBC,6BAAkBI,SAAvC,EAAkD,oCAAlD,CAAN;AACD,GAf4H,CAiB7H;;;AACA,MAAItB,QAAQ,CAACwB,QAAT,CAAkBD,MAAtB,EAA8B;AAC5B,UAAME,QAAQ,GAAG,MAAM,gCAAoB3B,SAApB,EAA+BC,cAAc,CAACyB,QAA9C,EAAwDpB,IAAxD,EAA8DJ,QAAQ,CAACwB,QAAvE,CAAvB;;AACA,QAAIC,QAAJ,EAAc;AACZ,YAAM,IAAIR,uBAAJ,CAAqB,SAArB,EAAgCQ,QAAhC,CAAN;AACD;AACF;AACF;;AAEM,eAAeG,UAAf,CAA0B9B,SAA1B,EAA8CE,QAA9C,EAA8E;AACnF;AACA,QAAMI,IAAI,GAAG,MAAM,0BAAcN,SAAd,EAAyBE,QAAQ,CAACE,cAAlC,EAAkDF,QAAQ,CAACQ,QAA3D,CAAnB,CAFmF,CAGnF;;AACA,QAAMqB,MAAM,GAAG,MAAM/B,SAAS,CAACO,OAAV,CAAkByB,MAAlB,CAAyB1B,IAAI,CAACU,EAA9B,CAArB;;AACA,MAAI,CAACe,MAAL,EAAa;AACX,UAAM,IAAIZ,uBAAJ,CAAqB,CAACC,6BAAkBhB,cAAnB,EAAmCgB,6BAAkBV,QAArD,EAA+DW,IAA/D,CAAoE,GAApE,CAArB,EAAgG,2BAAhG,CAAN;AACD;AACF;;AAEM,eAAeY,YAAf,CAA4BjC,SAA5B,EAAgDC,cAAhD,EAA0FiC,UAA1F,EAA8H;AACnI;AACA,QAAMC,YAAY,GAAG,MAAMnC,SAAS,CAACO,OAAV,CAAkB6B,MAAlB,CAAuC;AAAC3B,IAAAA,KAAK,EAAEyB,UAAU,CAAC9B;AAAnB,GAAvC,EAA2E,IAA3E,CAA3B;;AACA,MAAI,CAAC+B,YAAY,CAACV,MAAlB,EAA0B;AACxB,UAAM,IAAIY,sCAAJ,EAAN;AACD;;AACD,MAAIF,YAAY,CAACV,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,UAAM,IAAIa,uCAAJ,EAAN;AACD;;AACD,QAAMC,MAAM,GAAGJ,YAAY,CAAC,CAAD,CAAZ,CAAgBK,QAAhB,CAAyBC,IAAzB,CAA+BC,KAAD,IAAWA,KAAK,CAACjC,KAAN,KAAgByB,UAAU,CAACxB,QAA3B,IAAuCgC,KAAK,CAACxB,KAAN,KAAgB,SAAhG,CAAf;;AACA,MAAI,CAACqB,MAAL,EAAa;AACX,UAAM,IAAII,gCAAJ,EAAN;AACD,GAZkI,CAanI;;;AACA,QAAMrC,IAAI,GAAG,MAAMN,SAAS,CAACO,OAAV,CAAkBqC,OAAlB,CAAwCL,MAAM,CAACvB,EAA/C,CAAnB;AACA,QAAM6B,QAAQ,GAAGX,UAAU,CAACY,UAAX,CAAsBC,KAAtB,CAA4B,GAA5B,CAAjB,CAfmI,CAiBnI;;AACA,QAAMC,gBAAgB,GAAG1C,IAAI,CAAC2C,aAAL,CAAmBR,IAAnB,CAAyBS,KAAD,IAAYA,KAAK,CAACC,UAAN,KAAqB,SAArB,IAAkCD,KAAK,CAACE,UAAN,KAAqB,WAA3F,CAAzB;AACA,MAAI9B,YAAY,GAAG,6BAAW0B,gBAAgB,GAAGA,gBAAgB,CAACK,KAApB,GAA4B,EAAvD,CAAnB,CAnBmI,CAsBnI;;AACA,QAAMC,QAAQ,GAAG,8BAAkB,MAAMtD,SAAS,CAACuD,UAAV,CAAqBnB,MAArB,CAA4B;AAAC3B,IAAAA,KAAK,EAAEoC,QAAQ,CAAC,CAAD;AAAhB,GAA5B,EAAkD,IAAlD,CAAxB,CAAjB,CAvBmI,CAwBnI;;AACA,QAAMW,MAAM,GAAG,8BAAkB,MAAMxD,SAAS,CAACyD,MAAV,CAAiBrB,MAAjB,CAAwB;AAC7DsB,IAAAA,IAAI,EAAEb,QAAQ,CAAC,CAAD,CAAR,CAAYc,WAAZ,EADuD;AAE7DC,IAAAA,KAAK,EAAEN,QAAQ,CAACtC;AAF6C,GAAxB,EAGpC,IAHoC,CAAxB,CAAf,CAzBmI,CA6BnI;;AACA,QAAM6C,KAAK,GAAG,8BAAkB,MAAM7D,SAAS,CAAC8D,KAAV,CAAgB1B,MAAhB,CAAuB;AAC3DsB,IAAAA,IAAI,EAAEb,QAAQ,CAAC,CAAD,CAAR,CAAYc,WAAZ,EADqD;AAE3DC,IAAAA,KAAK,EAAEN,QAAQ,CAACtC,EAF2C;AAG3D+C,IAAAA,SAAS,EAAEP,MAAM,CAACxC;AAHyC,GAAvB,EAInC,IAJmC,CAAxB,CAAd;AAMA,MAAIgD,eAAJ;;AACA,MAAInB,QAAQ,CAACpB,MAAT,KAAoB,CAAxB,EAA2B;AACzB;AACA,UAAMwC,SAAS,GAAG,8BAAkB,MAAMjE,SAAS,CAACkE,SAAV,CAAoB9B,MAApB,CAA2B;AACnEsB,MAAAA,IAAI,EAAEb,QAAQ,CAAC,CAAD,CAAR,CAAYc,WAAZ,EAD6D;AAEnEC,MAAAA,KAAK,EAAEN,QAAQ,CAACtC,EAFmD;AAGnE+C,MAAAA,SAAS,EAAEP,MAAM,CAACxC,EAHiD;AAG7CmD,MAAAA,QAAQ,EAAEN,KAAK,CAAC7C;AAH6B,KAA3B,EAIvC,IAJuC,CAAxB,CAAlB;AAMAgD,IAAAA,eAAe,GAAG,mCAAwB,WAAxB,EAAqCV,QAArC,EAA+CE,MAA/C,EAAuDK,KAAvD,EAA8DI,SAA9D,CAAlB,CARyB,CAUzB;;AACA,UAAMG,YAAY,GAAG,MAAMpE,SAAS,CAACkE,SAAV,CAAoBrC,MAApB,CAA2B;AACpDwC,MAAAA,GAAG,EAAE,CACHf,QAAQ,CAACtC,EADN,EAEHwC,MAAM,CAACE,IAAP,CAAYC,WAAZ,EAFG,EAGHE,KAAK,CAACH,IAAN,CAAWC,WAAX,EAHG,EAIHM,SAAS,CAACP,IAAV,CAAeC,WAAf,EAJG,EAKHtC,IALG,CAKE,GALF,CAD+C;AAOpDZ,MAAAA,KAAK,EAAEyB,UAAU,CAACzB,KAAX,CAAiBgB,MAAjB,GAA0BS,UAAU,CAACzB,KAArC,GAA6CwD,SAAS,CAACxD,KAPV;AAQpDG,MAAAA,WAAW,EAAEsB,UAAU,CAACtB,WAAX,CAAuBa,MAAvB,GAAgCS,UAAU,CAACtB,WAA3C,GAAyDqD,SAAS,CAACrD;AAR5B,KAA3B,CAA3B;;AAUA,QAAIwD,YAAY,CAACE,KAAjB,EAAwB;AACtB,YAAM,IAAInD,uBAAJ,CAAqBoD,+BAAoBzB,UAAzC,EAAqD,yCAArD,CAAN;AACD,KAvBwB,CAyBzB;;;AACA,UAAMnB,QAAQ,GAAG,MAAM3B,SAAS,CAACwE,uBAAV,CAAwD;AAC7EC,MAAAA,QAAQ,EAAExE,cAAc,CAACyE,UADoD;AAE7ExD,MAAAA,KAAK,EAAE,SAFsE;AAG7EyD,MAAAA,GAAG,EAAErE,IAAI,CAACU,EAHmE;AAI7EqC,MAAAA,KAAK,EAAE;AACLuB,QAAAA,YAAY,EAAE,EADT;AAELD,QAAAA,GAAG,EAAEV,SAAS,CAACjD,EAFV;AAGLE,QAAAA,KAAK,EAAE,WAHF;AAIL2D,QAAAA,GAAG,EAAEZ,SAAS,CAACY,GAJV;AAKL7D,QAAAA,EAAE,EAAEiD,SAAS,CAACjD;AALT;AAJsE,KAAxD,CAAvB;;AAYA,QAAI,CAACW,QAAL,EAAe;AACb,YAAM,IAAIR,uBAAJ,CAAqB,CACzBoD,+BAAoBnE,cADK,EAEzBmE,+BAAoB7D,QAFK,EAGzB6D,+BAAoBzB,UAHK,EAIzBzB,IAJyB,CAIpB,GAJoB,CAArB,EAIO,mDAJP,CAAN;AAKD;AACF,GA7CD,MA6CO;AACL2C,IAAAA,eAAe,GAAG,mCAAwB,OAAxB,EAAiCV,QAAjC,EAA2CE,MAA3C,EAAmDK,KAAnD,CAAlB,CADK,CAEL;;AACA,UAAMO,YAAY,GAAG,MAAMpE,SAAS,CAAC8D,KAAV,CAAgBjC,MAAhB,CAAuB;AAChDwC,MAAAA,GAAG,EAAE,CACHf,QAAQ,CAACtC,EADN,EAEHwC,MAAM,CAACE,IAAP,CAAYC,WAAZ,EAFG,EAGHE,KAAK,CAACH,IAAN,CAAWC,WAAX,EAHG,EAIHtC,IAJG,CAIE,GAJF,CAD2C;AAMhDZ,MAAAA,KAAK,EAAEyB,UAAU,CAACzB,KAAX,CAAiBgB,MAAjB,GAA0BS,UAAU,CAACzB,KAArC,GAA6CoD,KAAK,CAACpD,KANV;AAOhDG,MAAAA,WAAW,EAAEsB,UAAU,CAACtB,WAAX,CAAuBa,MAAvB,GAAgCS,UAAU,CAACtB,WAA3C,GAAyDiD,KAAK,CAACjD;AAP5B,KAAvB,CAA3B;;AASA,QAAIwD,YAAY,CAACE,KAAjB,EAAwB;AACtB,YAAM,IAAInD,uBAAJ,CAAqBoD,+BAAoBzB,UAAzC,EAAqD,yCAArD,CAAN;AACD,KAdI,CAgBL;;;AACA,UAAMnB,QAAQ,GAAG,MAAM3B,SAAS,CAACwE,uBAAV,CAAwD;AAC7EC,MAAAA,QAAQ,EAAExE,cAAc,CAACyE,UADoD;AAE7ExD,MAAAA,KAAK,EAAE,SAFsE;AAG7EyD,MAAAA,GAAG,EAAErE,IAAI,CAACU,EAHmE;AAI7EqC,MAAAA,KAAK,EAAE;AACLuB,QAAAA,YAAY,EAAE,EADT;AAELD,QAAAA,GAAG,EAAEd,KAAK,CAAC7C,EAFN;AAGLE,QAAAA,KAAK,EAAE,OAHF;AAIL2D,QAAAA,GAAG,EAAEhB,KAAK,CAACgB,GAJN;AAKL7D,QAAAA,EAAE,EAAE6C,KAAK,CAAC7C;AALL;AAJsE,KAAxD,CAAvB;;AAYA,QAAI,CAACW,QAAL,EAAe;AACb,YAAM,IAAIR,uBAAJ,CAAqB,CACzBoD,+BAAoBnE,cADK,EAEzBmE,+BAAoB7D,QAFK,EAGzB6D,+BAAoBzB,UAHK,EAIzBzB,IAJyB,CAIpB,GAJoB,CAArB,EAIO,mDAJP,CAAN;AAKD;AACF,GAtHkI,CAuHnI;;;AACAC,EAAAA,YAAY,GAAG,mCAAwBA,YAAxB,EAAsC0C,eAAtC,CAAf,CAxHmI,CA0HnI;;AACA,MAAI,EAAE,MAAM,iCAAqBhE,SAArB,EAAgCC,cAAc,CAACqB,YAA/C,EAA6DhB,IAA7D,EAAmEgB,YAAnE,CAAR,CAAJ,EAA+F;AAC7F,UAAM,IAAIH,uBAAJ,CAAqB,CACzBoD,+BAAoBnE,cADK,EAEzBmE,+BAAoB7D,QAFK,EAGzB6D,+BAAoBzB,UAHK,EAIzBzB,IAJyB,CAIpB,GAJoB,CAArB,EAIO,8CAJP,CAAN;AAKD;AACF","sourcesContent":["import {Alation} from 'alation_connector';\nimport {CustomFieldsIdCollection, IPhysic, ITerm} from '../types';\nimport {ITermArticle, LinkCustomFieldValue} from '../types/alation';\nimport {\n  checkParentChildrenTermExists,\n  checkSearchResult,\n  getParentTerm,\n  getTermByPath,\n  setAlternativeNameField,\n  setLineageTableField,\n  setReferenceField,\n  updateStewardsField,\n} from './index';\nimport {AlationTermError, UniqTermKeyTermError} from '../errors/terms';\nimport {PHYSIC_COLUMN_NAMES, TERM_COLUMN_NAMES} from '../constants';\nimport {\n  ParentTermDuplicatePhysicError,\n  ParentTermNotFoundPhysicError,\n  TermNotFoundPhysicError,\n} from '../errors/physics';\nimport {generateLineageTableRow, insertOrReplaceTableRow} from './html';\nimport htmlParser from 'node-html-parser';\n\nexport async function insertTerm(connector: Alation, customFieldsId: CustomFieldsIdCollection, termData: ITerm): Promise<void> {\n  const parentTerm = await getParentTerm(connector, termData.parentTermName);\n  // проверка на уникальность ключа PARENT_TERM.CHILD_TERM\n  if (checkParentChildrenTermExists(parentTerm, termData)) {\n    throw new UniqTermKeyTermError();\n  }\n  // создание термина\n  const term = await connector.Article.create<ITermArticle>({\n    title: termData.termName,\n    body: termData.description,\n    custom_templates: parentTerm.custom_templates.map((t) => t.id),\n  });\n  // связывание с родителем\n  if (!(await connector.Article.addChild(parentTerm.id, {id: term.id, otype: 'article'}))) {\n    throw new AlationTermError([TERM_COLUMN_NAMES.parentTermName, TERM_COLUMN_NAMES.termName].join(','),\n        'не удалось связать родительский термин с потомком');\n  }\n\n  // запись Lineage table\n  if (!(await setLineageTableField(connector, customFieldsId.lineageTable, term))) {\n    throw new AlationTermError(TERM_COLUMN_NAMES.termName, 'не удалось произвести запись таблицы поля Lineage');\n  }\n\n  // запись Alternative name\n  if (!(await setAlternativeNameField(connector, customFieldsId.alternativeName, term, termData.alternativeName))) {\n    throw new AlationTermError(TERM_COLUMN_NAMES.alternativeName, 'не удалось произвести запись поля Alternative name');\n  }\n\n  // запись ссылки reference\n  if (termData.reference.length && !(await setReferenceField(connector, customFieldsId.reference, term, termData.reference))) {\n    throw new AlationTermError(TERM_COLUMN_NAMES.reference, 'не удалось произвести запись поля Reference');\n  }\n  // добавление stewards\n  if (termData.stewards.length) {\n    const response = await updateStewardsField(connector, customFieldsId.stewards, term, termData.stewards);\n    if (response) {\n      throw new AlationTermError('Steward', response);\n    }\n  }\n}\n\nexport async function updateTerm(connector: Alation, customFieldsId: CustomFieldsIdCollection, termData: ITerm): Promise<void> {\n  // получение термина по ключу\n  let term = await getTermByPath(connector, termData.parentTermName, termData.termName);\n  // обновление полей\n\n  // body\n  term = await connector.Article.update<ITermArticle>({id: term.id, title: term.title, body: termData.description});\n  // Alternative name\n  if (!(await setAlternativeNameField(connector, customFieldsId.alternativeName, term, termData.alternativeName))) {\n    throw new AlationTermError(TERM_COLUMN_NAMES.alternativeName, 'не удалось обновить поле Alternative name');\n  }\n\n  // запись ссылки reference\n  if (termData.reference.length && !(await setReferenceField(connector, customFieldsId.reference, term, termData.reference))) {\n    throw new AlationTermError(TERM_COLUMN_NAMES.reference, 'не удалось обновить поле Reference');\n  }\n\n  // добавление stewards\n  if (termData.stewards.length) {\n    const response = await updateStewardsField(connector, customFieldsId.stewards, term, termData.stewards);\n    if (response) {\n      throw new AlationTermError('Steward', response);\n    }\n  }\n}\n\nexport async function deleteTerm(connector: Alation, termData: ITerm): Promise<void> {\n  // получение термина по ключу\n  const term = await getTermByPath(connector, termData.parentTermName, termData.termName);\n  // удаление\n  const result = await connector.Article.delete(term.id);\n  if (!result) {\n    throw new AlationTermError([TERM_COLUMN_NAMES.parentTermName, TERM_COLUMN_NAMES.termName].join(','), `не удалось удалить термин`);\n  }\n}\n\nexport async function uploadPhysic(connector: Alation, customFieldsId: CustomFieldsIdCollection, physicData: IPhysic): Promise<void> {\n  // получение термина по ключу\n  const searchResult = await connector.Article.search<ITermArticle>({title: physicData.parentTermName}, true);\n  if (!searchResult.length) {\n    throw new ParentTermNotFoundPhysicError();\n  }\n  if (searchResult.length > 1) {\n    throw new ParentTermDuplicatePhysicError();\n  }\n  const termId = searchResult[0].children.find((child) => child.title === physicData.termName && child.otype === 'article');\n  if (!termId) {\n    throw new TermNotFoundPhysicError();\n  }\n  // получение термина\n  const term = await connector.Article.getById<ITermArticle>(termId.id) as ITermArticle;\n  const segments = physicData.physicPath.split('.');\n\n  // поиск custom_field Lineage таблицы термина\n  const tableCustomField = term.custom_fields.find((field) => (field.field_name === 'Lineage' && field.value_type === 'rich_text'));\n  let lineageTable = htmlParser(tableCustomField ? tableCustomField.value : '');\n\n\n  // получение источника\n  const instance = checkSearchResult(await connector.Datasource.search({title: segments[0]}, true));\n  // получение схемы\n  const schema = checkSearchResult(await connector.Schema.search({\n    name: segments[1].toLowerCase(),\n    ds_id: instance.id,\n  }, true));\n  // получение таблицы\n  const table = checkSearchResult(await connector.Table.search({\n    name: segments[2].toLowerCase(),\n    ds_id: instance.id,\n    schema_id: schema.id,\n  }, true));\n\n  let lineageTableRow;\n  if (segments.length === 4) {\n    // получение аттрибута\n    const attribute = checkSearchResult(await connector.Attribute.search({\n      name: segments[3].toLowerCase(),\n      ds_id: instance.id,\n      schema_id: schema.id, table_id: table.id,\n    }, true));\n\n    lineageTableRow = generateLineageTableRow('attribute', instance, schema, table, attribute);\n\n    // обновление title и description\n    const updateResult = await connector.Attribute.update({\n      key: [\n        instance.id,\n        schema.name.toLowerCase(),\n        table.name.toLowerCase(),\n        attribute.name.toLowerCase(),\n      ].join('.'),\n      title: physicData.title.length ? physicData.title : attribute.title,\n      description: physicData.description.length ? physicData.description : attribute.description,\n    });\n    if (updateResult.error) {\n      throw new AlationTermError(PHYSIC_COLUMN_NAMES.physicPath, 'не удалось обновить title и description');\n    }\n\n    // добавление ссылки Lineage ref\n    const response = await connector.updateCustomFieldsValue<LinkCustomFieldValue>({\n      field_id: customFieldsId.lineageRef,\n      otype: 'article',\n      oid: term.id,\n      value: {\n        display_name: '',\n        oid: attribute.id,\n        otype: 'attribute',\n        url: attribute.url,\n        id: attribute.id,\n      },\n    });\n    if (!response) {\n      throw new AlationTermError([\n        PHYSIC_COLUMN_NAMES.parentTermName,\n        PHYSIC_COLUMN_NAMES.termName,\n        PHYSIC_COLUMN_NAMES.physicPath,\n      ].join(','), 'не удалось добавить ссылку в custom field Lineage');\n    }\n  } else {\n    lineageTableRow = generateLineageTableRow('table', instance, schema, table);\n    // обновление title и description\n    const updateResult = await connector.Table.update({\n      key: [\n        instance.id,\n        schema.name.toLowerCase(),\n        table.name.toLowerCase(),\n      ].join('.'),\n      title: physicData.title.length ? physicData.title : table.title,\n      description: physicData.description.length ? physicData.description : table.description,\n    });\n    if (updateResult.error) {\n      throw new AlationTermError(PHYSIC_COLUMN_NAMES.physicPath, 'не удалось обновить title и description');\n    }\n\n    // добавление ссылки Lineage ref\n    const response = await connector.updateCustomFieldsValue<LinkCustomFieldValue>({\n      field_id: customFieldsId.lineageRef,\n      otype: 'article',\n      oid: term.id,\n      value: {\n        display_name: '',\n        oid: table.id,\n        otype: 'table',\n        url: table.url,\n        id: table.id,\n      },\n    });\n    if (!response) {\n      throw new AlationTermError([\n        PHYSIC_COLUMN_NAMES.parentTermName,\n        PHYSIC_COLUMN_NAMES.termName,\n        PHYSIC_COLUMN_NAMES.physicPath,\n      ].join(','), 'не удалось добавить ссылку в custom field Lineage');\n    }\n  }\n  // добавление/переопределение записи в таблице\n  lineageTable = insertOrReplaceTableRow(lineageTable, lineageTableRow);\n\n  // обновление таблицы термина\n  if (!(await setLineageTableField(connector, customFieldsId.lineageTable, term, lineageTable))) {\n    throw new AlationTermError([\n      PHYSIC_COLUMN_NAMES.parentTermName,\n      PHYSIC_COLUMN_NAMES.termName,\n      PHYSIC_COLUMN_NAMES.physicPath,\n    ].join(','), 'не удалось добавить запись в таблицу Lineage');\n  }\n}\n"],"file":"actions.js"}