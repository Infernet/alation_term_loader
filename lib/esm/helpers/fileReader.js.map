{"version":3,"sources":["../../../src/helpers/fileReader.ts"],"names":["fs","BaseTermError","getPhysicsLogPath","getTermsLogPath","getTsvContent","path","skipHeader","content","readFileSync","encoding","records","split","logError","error","filepath","existsSync","appendFileSync","toLogString","outputFileSync","generateLogHeader","join"],"mappings":"AAAA,OAAOA,EAAP,MAAe,UAAf;AACA,SAAmBC,aAAnB;AACA,SAAQC,iBAAR,EAA2BC,eAA3B;AAEA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAAqCC,UAAU,GAAG,KAAlD,EAAmE;AACxE,QAAMC,OAAO,GAAGP,EAAE,CAACQ,YAAH,CAAgBH,IAAhB,EAAsB;AAACI,IAAAA,QAAQ,EAAE;AAAX,GAAtB,CAAhB;AACA,QAAMC,OAAO,GAAGH,OAAO,CAACI,KAAR,CAAc,IAAd,CAAhB;;AACA,MAAIL,UAAJ,EAAgB;AACdI,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,EAAb;AACD;;AACD,SAAOA,OAAP;AACD;AAED,OAAO,SAASE,QAAT,CAAuCP,IAAvC,EAAqDQ,KAArD,EAAqE;AAC1E,QAAMC,QAAQ,GAAID,KAAK,YAAYZ,aAAlB,GAAmCE,eAAe,CAACE,IAAD,CAAlD,GAA2DH,iBAAiB,CAACG,IAAD,CAA7F;;AACA,MAAIL,EAAE,CAACe,UAAH,CAAcD,QAAd,CAAJ,EAA6B;AAC3Bd,IAAAA,EAAE,CAACgB,cAAH,CAAkBF,QAAlB,EAA6B,KAAID,KAAK,CAACI,WAAN,EAAoB,EAArD,EAAwD;AAACR,MAAAA,QAAQ,EAAE;AAAX,KAAxD;AACD,GAFD,MAEO;AACLT,IAAAA,EAAE,CAACkB,cAAH,CAAkBJ,QAAlB,EAA4B,CAACD,KAAK,CAACM,iBAAN,EAAD,EAA4BN,KAAK,CAACI,WAAN,EAA5B,EAAiDG,IAAjD,CAAsD,IAAtD,CAA5B,EAAyF;AAACX,MAAAA,QAAQ,EAAE;AAAX,KAAzF;AACD;AACF","sourcesContent":["import fs from 'fs-extra';\nimport {BaseError, BaseTermError} from '../errors';\nimport {getPhysicsLogPath, getTermsLogPath} from '../constants';\n\nexport function getTsvContent(path: string, skipHeader = false): string[] {\n  const content = fs.readFileSync(path, {encoding: 'utf-8'});\n  const records = content.split('\\n');\n  if (skipHeader) {\n    records[0] = '';\n  }\n  return records;\n}\n\nexport function logError<T extends BaseError>(path: string, error: T): void {\n  const filepath = (error instanceof BaseTermError) ? getTermsLogPath(path) : getPhysicsLogPath(path);\n  if (fs.existsSync(filepath)) {\n    fs.appendFileSync(filepath, `\\n${error.toLogString()}`, {encoding: 'utf-8'});\n  } else {\n    fs.outputFileSync(filepath, [error.generateLogHeader(), error.toLogString()].join('\\n'), {encoding: 'utf-8'});\n  }\n}\n"],"file":"fileReader.js"}