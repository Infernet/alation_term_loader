{"version":3,"sources":["../../../src/services/physics.ts"],"names":["getTsvContent","logError","parsePhysics","path","validatePhysic","uploadPhysic","BasePhysicsError","UniqKeyPhysicsError","runPhysicService","connector","config","filePath","skipHeader","records","physicsCollection","Map","position","length","data","key","parentTermName","termName","physicPath","has","get","push","set","physic","error","filename","basename","logPath","delete","customFieldsId","e","termParentName","physicsPath"],"mappings":"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","sourcesContent":["import {Alation} from 'alation_connector';\nimport {IConfig, PhysicsCollection} from '../types';\nimport {getTsvContent, logError} from '../helpers/fileReader';\nimport {parsePhysics} from '../helpers/parser';\nimport path from 'path';\nimport {validatePhysic} from '../helpers/validator';\nimport {uploadPhysic} from '../helpers/actions';\nimport {BasePhysicsError} from '../errors';\nimport {UniqKeyPhysicsError} from '../errors/physics';\n\nexport async function runPhysicService(connector: Alation, config: IConfig, filePath: string, skipHeader: boolean): Promise<void> {\n  const records = getTsvContent(filePath, skipHeader);\n  const physicsCollection: PhysicsCollection = new Map();\n  for (let position = 0; position < records.length; position++) {\n    if (!records[position].length) {\n      continue;\n    }\n    const data = parsePhysics(records[position]);\n    const key = `${data.parentTermName}.${data.termName}.${data.physicPath}`;\n\n    if (physicsCollection.has(key)) {\n      // @ts-ignore\n      physicsCollection.get(key).push({data, position});\n    } else {\n      physicsCollection.set(key, [{data, position}]);\n    }\n  }\n\n  for (const [key, physic] of physicsCollection) {\n    if (physic.length > 1) {\n      for (const {data, position} of physic) {\n        const error = new UniqKeyPhysicsError(data.termName, data.parentTermName, data.physicPath);\n        error.position = position;\n        error.filename = path.basename(filePath);\n        logError(config.logPath, error);\n      }\n      physicsCollection.delete(key);\n      continue;\n    }\n    const {data, position} = physic[0];\n    try {\n      validatePhysic(data);\n      await uploadPhysic(connector, config.customFieldsId, data);\n    } catch (e) {\n      if (e instanceof BasePhysicsError) {\n        e.termName = data.termName;\n        e.termParentName = data.parentTermName;\n        e.physicsPath = data.physicPath;\n        e.position = position + 1;\n        e.filename = path.basename(filePath);\n        logError(config.logPath, e);\n        continue;\n      }\n      throw e;\n    }\n  }\n}\n"],"file":"physics.js"}