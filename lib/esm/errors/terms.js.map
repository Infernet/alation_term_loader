{"version":3,"sources":["../../../src/errors/terms.ts"],"names":["BaseTermError","UniqTermKeyTermError","constructor","termName","termParentName","MissingRequireFieldTermError","columnName","AlationTermError","message","UnknownActionTermError","UncorrectedReferenceTermError","ParentTermNotFoundTermError","ParentTermDuplicateTermError","TermNotFoundTermError"],"mappings":"AAAA,SAAQA,aAAR;AAGA,OAAO,MAAMC,oBAAN,SAAmCD,aAAnC,CAAiD;AACtDE,EAAAA,WAAW,CAACC,QAAQ,GAAG,EAAZ,EAAgBC,cAAc,GAAG,EAAjC,EAAqC;AAC9C,UAAM,4BAAN,EAAoC,iEAApC,EAAuGD,QAAvG,EAAiHC,cAAjH;AACD;;AAHqD;AAMxD,OAAO,MAAMC,4BAAN,SAA2CL,aAA3C,CAAyD;AAC9DE,EAAAA,WAAW,CAACI,UAAD,EAAqB;AAC9B,UAAMA,UAAN,EAAkB,wCAAlB;AACD;;AAH6D;AAMhE,OAAO,MAAMC,gBAAN,SAA+BP,aAA/B,CAA6C;AAClDE,EAAAA,WAAW,CAACI,UAAD,EAAqBE,OAArB,EAAsCL,QAAQ,GAAG,EAAjD,EAAqDC,cAAc,GAAG,EAAtE,EAA0E;AACnF,UAAME,UAAN,EAAmB,+CAA8CE,OAAQ,EAAzE,EAA4EL,QAA5E,EAAsFC,cAAtF;AACD;;AAHiD;AAMpD,OAAO,MAAMK,sBAAN,SAAqCT,aAArC,CAAmD;AACxDE,EAAAA,WAAW,CAACC,QAAQ,GAAG,EAAZ,EAAgBC,cAAc,GAAG,EAAjC,EAAqC;AAC9C,UAAM,QAAN,EAAgB,qCAAhB,EAAuDD,QAAvD,EAAiEC,cAAjE;AACD;;AAHuD;AAM1D,OAAO,MAAMM,6BAAN,SAA4CV,aAA5C,CAA0D;AAC/DE,EAAAA,WAAW,CAACC,QAAQ,GAAG,EAAZ,EAAgBC,cAAc,GAAG,EAAjC,EAAqC;AAC9C,UAAM,WAAN,EAAmB,sEAAnB,EAA2FD,QAA3F,EAAqGC,cAArG;AACD;;AAH8D;AAMjE,OAAO,MAAMO,2BAAN,SAA0CX,aAA1C,CAAwD;AAC7DE,EAAAA,WAAW,CAACC,QAAQ,GAAG,EAAZ,EAAgBC,cAAc,GAAG,EAAjC,EAAqC;AAC9C,UAAM,qBAAN,EAA6B,2CAA7B,EAA0ED,QAA1E,EAAoFC,cAApF;AACD;;AAH4D;AAM/D,OAAO,MAAMQ,4BAAN,SAA2CZ,aAA3C,CAAyD;AAC9DE,EAAAA,WAAW,CAACC,QAAQ,GAAG,EAAZ,EAAgBC,cAAc,GAAG,EAAjC,EAAqC;AAC9C,UAAM,qBAAN,EACI,mEACA,sDAFJ,EAGID,QAHJ,EAIIC,cAJJ;AAKD;;AAP6D;AAUhE,OAAO,MAAMS,qBAAN,SAAoCb,aAApC,CAAkD;AACvDE,EAAAA,WAAW,CAACC,QAAQ,GAAG,EAAZ,EAAgBC,cAAc,GAAG,EAAjC,EAAqC;AAC9C,UAAM,QAAN,EAAgB,8BAAhB,EAAgDD,QAAhD,EAA0DC,cAA1D;AACD;;AAHsD","sourcesContent":["import {BaseTermError} from './index';\n\n\nexport class UniqTermKeyTermError extends BaseTermError {\n  constructor(termName = '', termParentName = '') {\n    super('Родительский термин,Термин', 'ERR-001 Не уникальное сочетание родительского термина и термина', termName, termParentName);\n  }\n}\n\nexport class MissingRequireFieldTermError extends BaseTermError {\n  constructor(columnName: string) {\n    super(columnName, 'ERR-002 Обязательное поле не заполнено');\n  }\n}\n\nexport class AlationTermError extends BaseTermError {\n  constructor(columnName: string, message: string, termName = '', termParentName = '') {\n    super(columnName, `ERR-003 ошибка при обращении к api Alation: ${message}`, termName, termParentName);\n  }\n}\n\nexport class UnknownActionTermError extends BaseTermError {\n  constructor(termName = '', termParentName = '') {\n    super('Action', 'ERR-004 Неизвестное значение Action', termName, termParentName);\n  }\n}\n\nexport class UncorrectedReferenceTermError extends BaseTermError {\n  constructor(termName = '', termParentName = '') {\n    super('Reference', 'ERR-005 Неверный формат поля Reference, проверьте правильность ввода', termName, termParentName);\n  }\n}\n\nexport class ParentTermNotFoundTermError extends BaseTermError {\n  constructor(termName = '', termParentName = '') {\n    super('Родительский термин', 'ERR-006 Родительский термин не существует', termName, termParentName);\n  }\n}\n\nexport class ParentTermDuplicateTermError extends BaseTermError {\n  constructor(termName = '', termParentName = '') {\n    super('Родительский термин',\n        'ERR-007 В Alation существует два родительских термина с данным' +\n        ' названием - исправьте перед загрузкой данного файла',\n        termName,\n        termParentName);\n  }\n}\n\nexport class TermNotFoundTermError extends BaseTermError {\n  constructor(termName = '', termParentName = '') {\n    super('Термин', 'ERR-008 Термин не существует', termName, termParentName);\n  }\n}\n\n"],"file":"terms.js"}